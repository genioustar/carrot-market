// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int       @id @default(autoincrement())
  phone    String?   @unique
  email    String?   @unique
  name     String
  avatar   String?
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  // User 모델와 relation이 있는 애들은 아래처럼 계속 추가해줘야함!
  tokens   Token[]
  products Product[]
  fav      Fav[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique //token을 뜻함 아래의 onDelete: Cascade는 User가 지워질때 자식인 Token도 지워진다는 의미! onDelete: SetNull은 User가 지워지면 user값을 null로 한다는 뜻!
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade) //userId는 ref id에서 User table에 있는 id 값이란걸 알 수 있음. 이를 통해서 token.user.name ==="Anonymous" 이게 됨!
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Product {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  image       String
  name        String
  price       Int
  description String   @db.MediumText // string으로 하면 varchar(191)만 쓸 수 있어서!
  favs        Fav[]

  @@index([userId])
}

// User에 의해 생성되고 이는 Product를 가리키게 되는 모델!
model Fav {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId    Int
  productId Int

  @@index([userId, productId])
}
